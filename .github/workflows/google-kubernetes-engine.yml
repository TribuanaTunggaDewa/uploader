name: Build and Deploy to GKE

on:
  release:
    types: [created]

env:
  IMAGE: uploader

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    # Get version
    - name: Get the version
      id: get_tag_name
      run: echo ::set-output name=GIT_TAG_NAME::${GITHUB_REF/refs\/tags\//}

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        project_id: ${{ secrets.GCLOUD_PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        credentials: ${{ secrets.GCLOUD_SERVICE_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "asia.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE:$GIT_TAG_NAME" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "asia.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE:$GIT_TAG_NAME"

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl set image deployment $IMAGE $IMAGE=asia.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE:$GIT_TAG_NAME -n $DEPLOYMENT_NAMESPACE
        kubectl rollout status deployment/$IMAGE -n $DEPLOYMENT_NAMESPACE
        kubectl get deployments -o wide -n DEPLOYMENT_NAMESPACE
