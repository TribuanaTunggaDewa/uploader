name: Build and Deploy to GKE

on:
  release:
    types: [created]

env:
  IMAGE: uploader
  DEPLOYMENT_NAME: uploader
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  NAMESPACE: ${{ secrets.DEPLOYMENT_NAMESPACE }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    # Get version
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        project_id: $PROJECT_ID

    # Configure Docker to use the gcloud command-line tool
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        credentials: ${{ secrets.GCLOUD_SERVICE_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "asia.gcr.io/$PROJECT_ID/$IMAGE:${{ steps.get_version.outputs.VERSION }}" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "asia.gcr.io/$PROJECT_ID/$IMAGE:${{ steps.get_version.outputs.VERSION }}"

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl set image deployment $DEPLOYMENT_NAME $IMAGE=asia.gcr.io/$PROJECT_ID/$IMAGE:${{ steps.get_version.outputs.VERSION }} -n $NAMESPACE
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n $NAMESPACE
        kubectl get deployments -o wide -n $NAMESPACE
